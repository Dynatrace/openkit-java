buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
    classpath 'ru.vyarus:gradle-animalsniffer-plugin:1.3.0'
  }
}

group 'com.dynatrace.openkit'
version '1.0.2-SNAPSHOT'

def buildNumber = System.getenv()['BUILD_NUMBER']
if (version.endsWith('-SNAPSHOT') && buildNumber != null) {
  version version + '-' + buildNumber
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'ru.vyarus.animalsniffer'
apply from: "gradle/license.gradle"

repositories {
    mavenCentral()
}

def target = System.getenv("TARGET_COMPATIBILITY") ?: "6"

sourceCompatibility = 1.6
targetCompatibility = "1." + target


dependencies {
    signature 'org.codehaus.mojo.signature:java16:1.1@signature'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
}

test {
    exclude '**/local/*.class'
}

jar {
    baseName = 'openkit'
    //classifier = 'java' + target
    manifest {
      attributes 'Specification-Title': 'Dynatrace OpenKit SDK for Java',
				'Specification-Version': version,
				'Specification-Vendor': 'Dynatrace LLC',
				'url': 'https://github.com/Dynatrace/openkit-java'
    }
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocZip(type: Zip, dependsOn: javadoc) {
    baseName = 'openkit'
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

artifacts {
    archives sourceJar, javadocZip, javadocJar
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId project.name

			from components.java

			artifact sourceJar {
				classifier "sources"
			}
			artifact javadocJar {
				classifier "javadoc"
			}
		}
	}
}

task printVersion {
  doLast {
    logger.quiet version
  }
}
